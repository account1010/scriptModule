async function receiveData(url) { if (typeof url === "string"){ try{ const data = await fetch(url); const response = await data.text(); console.log(response) } catch(error){ throw new TypeError("failed to receiveData") } } } const write = { info:function(...data){ console.log(...data); }, warn:function(...data){ console.warn(...data); }, error:function(data){ throw new Error(data) } }; function download(data,name,langue){ if(typeof data == "string" || (typeof data == "number" && !isNaN(data)) && typeof langue == "string" && typeof name == "string"){ const blob = new Blob([data],{type:'text/plain'}); const create = document.createElement("a"); create.href = URL.createObjectURL(blob); create.download = name+"."+langue; create.click() } } const copy = { text:function(text = "hello clipy board!"){ const confirmm = confirm(text+" adlı yazıyı kopyalamak istiyor musunuz?"); if(confirmm){ navigator.clipboard.writeText(text) } else{ return; } }, image:async function(path){ const confirmm = confirm("belirttiğiniz yoldaki resmi kopyalamak istediğinizden emin misiniz?"); if(confirmm){ const fecthData = await fetch(path); const response = await fecthData.blob(); const clipyItem = new ClipboardItem({'image/png':response}); navigator.clipboard.write([clipyItem]).then(function(){}).catch(function(error){ console.error("hata: "+error); }) } } }; let soundValue = null; let isPlaying = false; let islem = true; let time = 0; let intarval = null; const sound = { play: function(soundPath) { if (typeof soundPath === "string") { try { soundValue = new Audio(soundPath); if(islem){ soundValue.currentTime = time; intarval = setInterval(function(){time++},1000); soundValue.play(); soundValue.addEventListener('ended', function() {isPlaying = false;}); isPlaying = true; islem = false } } catch (error) { console.error("Error playing sound:", error); } } }, stop: function() { if (soundValue && isPlaying) { soundValue.pause(); time = 0; clearInterval(intarval); isPlaying = false; islem = true } }, pause: function(){ if (soundValue && isPlaying) { soundValue.pause(); isPlaying = false; clearInterval(intarval); islem = true } } };
